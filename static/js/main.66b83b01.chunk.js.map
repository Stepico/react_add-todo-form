{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUserByName","userName","usersFromServer","find","App","appropriateTodos","todosFromServer","useState","setInputTitle","setName","setTodos","isTitleChanged","setIsTitleChanged","isUserPicked","setIsUserPicked","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","Math","max","prevTodos","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b83b01.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getUserByName(userName: string): User | null {\n  return usersFromServer.find(user => user.name === userName) || null;\n}\n\nexport const App = () => {\n  const appropriateTodos: Todo[] = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const [title, setInputTitle] = useState('');\n  const [name, setName] = useState('0');\n  const [todos, setTodos] = useState(appropriateTodos);\n  const [isTitleChanged, setIsTitleChanged] = useState(true);\n  const [isUserPicked, setIsUserPicked] = useState(true);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    if (trimmedTitle !== '' && name !== '0') {\n      const newTodo: Todo = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: getUserByName(name)?.id || -1,\n        user: getUserByName(name),\n      };\n\n      setTodos((prevTodos) => [...prevTodos, newTodo]);\n      setName('0');\n      setInputTitle('');\n    }\n\n    if (name === '0') {\n      setIsUserPicked(false);\n    }\n\n    if (trimmedTitle === '') {\n      setIsTitleChanged(false);\n      setInputTitle('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setInputTitle(event.target.value);\n              setIsTitleChanged(true);\n            }}\n          />\n          {!isTitleChanged\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n              setIsUserPicked(true);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserPicked\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}